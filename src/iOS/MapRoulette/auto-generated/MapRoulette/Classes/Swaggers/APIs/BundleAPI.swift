//
// BundleAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class BundleAPI {
    /**
     Create a task bundle

     - parameter body: (body) The JSON structure for the bundle body. 
     - parameter apiKey: (header) The user&#x27;s apiKey to authorize the request 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func createTaskBundle(body: OrgMaprouletteModelsTaskBundle, apiKey: String, completion: @escaping ((_ data: OrgMaprouletteModelsTaskBundle?,_ error: Error?) -> Void)) {
        createTaskBundleWithRequestBuilder(body: body, apiKey: apiKey).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Create a task bundle
     - POST /taskBundle

     - examples: [{contentType=application/json, example={
  "bundleId" : 0,
  "ownerId" : 6,
  "taskIds" : [ 1, 1 ],
  "tasks" : [ {
    "parent" : 6,
    "created" : "created",
    "mappedOn" : "mappedOn",
    "bundleId" : 2,
    "suggestedFix" : "suggestedFix",
    "priority" : 9,
    "isBundlePrimary" : true,
    "mapillaryImages" : [ {
      "lon" : 7.386281948385884,
      "url_1024" : "url_1024",
      "url_640" : "url_640",
      "key" : "key",
      "lat" : 4.145608029883936,
      "url_320" : "url_320",
      "url_2048" : "url_2048"
    }, {
      "lon" : 7.386281948385884,
      "url_1024" : "url_1024",
      "url_640" : "url_640",
      "key" : "key",
      "lat" : 4.145608029883936,
      "url_320" : "url_320",
      "url_2048" : "url_2048"
    } ],
    "instruction" : "instruction",
    "review" : {
      "reviewRequestedBy" : 5,
      "reviewedAt" : "reviewedAt",
      "reviewStartedAt" : "reviewStartedAt",
      "reviewStatus" : 5,
      "reviewedBy" : 2,
      "reviewClaimedBy" : 7
    },
    "geometries" : "geometries",
    "name" : "name",
    "changesetId" : 3,
    "modified" : "modified",
    "location" : "location",
    "completionResponses" : "completionResponses",
    "id" : 0,
    "status" : 1
  }, {
    "parent" : 6,
    "created" : "created",
    "mappedOn" : "mappedOn",
    "bundleId" : 2,
    "suggestedFix" : "suggestedFix",
    "priority" : 9,
    "isBundlePrimary" : true,
    "mapillaryImages" : [ {
      "lon" : 7.386281948385884,
      "url_1024" : "url_1024",
      "url_640" : "url_640",
      "key" : "key",
      "lat" : 4.145608029883936,
      "url_320" : "url_320",
      "url_2048" : "url_2048"
    }, {
      "lon" : 7.386281948385884,
      "url_1024" : "url_1024",
      "url_640" : "url_640",
      "key" : "key",
      "lat" : 4.145608029883936,
      "url_320" : "url_320",
      "url_2048" : "url_2048"
    } ],
    "instruction" : "instruction",
    "review" : {
      "reviewRequestedBy" : 5,
      "reviewedAt" : "reviewedAt",
      "reviewStartedAt" : "reviewStartedAt",
      "reviewStatus" : 5,
      "reviewedBy" : 2,
      "reviewClaimedBy" : 7
    },
    "geometries" : "geometries",
    "name" : "name",
    "changesetId" : 3,
    "modified" : "modified",
    "location" : "location",
    "completionResponses" : "completionResponses",
    "id" : 0,
    "status" : 1
  } ]
}}]
     - parameter body: (body) The JSON structure for the bundle body. 
     - parameter apiKey: (header) The user&#x27;s apiKey to authorize the request 

     - returns: RequestBuilder<OrgMaprouletteModelsTaskBundle> 
     */
    open class func createTaskBundleWithRequestBuilder(body: OrgMaprouletteModelsTaskBundle, apiKey: String) -> RequestBuilder<OrgMaprouletteModelsTaskBundle> {
        let path = "/taskBundle"
        let URLString = MapRouletteAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
                        "apiKey": apiKey
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<OrgMaprouletteModelsTaskBundle>.Type = MapRouletteAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true, headers: headerParameters)
    }

}
